{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","components/Login.js","components/Togglable.js","components/NoteForm.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","toggleVisibility","buttonLabel","children","displayName","NoteForm","createNote","newNote","setNewNote","event","preventDefault","Math","random","target","baseUrl","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","id","put","newToken","login","credentials","a","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","noteFormRef","useRef","handleLogin","loginService","window","localStorage","setItem","JSON","stringify","noteService","setTimeout","useEffect","initialNotes","loggedUserJSON","getItem","parse","addNote","noteObject","current","returnedNote","concat","notesToShow","filter","name","map","find","n","changedNote","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9c55dcc.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Footer = () => {\n  const footerStyle = { color: 'green', fontStyle: 'italic', fontSize: 16 };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n","import React from 'react';\n\nexport const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input value={username} onChange={handleUsernameChange} />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n};\n","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  useImperativeHandle(ref, () => ({ toggleVisibility }));\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nTogglable.displayName = 'Togglable';\n","import React, { useState } from 'react';\n\nexport const NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('');\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5,\n    });\n    setNewNote('');\n  };\n\n  return (\n    <div className=\"formDiv\">\n      <h2>Create a new note</h2>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const request = axios.post(baseUrl, newObject, config);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n};\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Note,\n  Notification,\n  Footer,\n  LoginForm,\n  Togglable,\n  NoteForm,\n} from './components';\nimport noteService from './services/notes';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n  const noteFormRef = useRef();\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({ username, password });\n\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility();\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(\n          notes.map((note) => {\n            return note.id !== id ? note : returnedNote;\n          })\n        );\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const loginForm = () => {\n    return (\n      <Togglable buttonLabel=\"log in\">\n        <LoginForm\n          username={username}\n          password={password}\n          handleUsernameChange={({ target }) => setUsername(target.value)}\n          handlePasswordChange={({ target }) => setPassword(target.value)}\n          handleSubmit={handleLogin}\n        />\n      </Togglable>\n    );\n  };\n\n  const noteForm = () => (\n    <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  );\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      {user === null ? (\n        loginForm()\n      ) : (\n        <div>\n          <p>{user.name} logged-in</p>\n          {noteForm()}\n        </div>\n      )}\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}